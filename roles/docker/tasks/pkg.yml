---

#- name: Add Caicloud yum repository
#  when: inventory_hostname in groups['master'] and ansible_distribution == "CentOS"
#  when: ansible_distribution == "CentOS"
#  yum_repository:
#    name: Caicloud
#    file: caicloud
#    description: Caicloud
#    baseurl: file:///var/www/html/repos
#    enabled: yes
#    gpgcheck: no
#  register: add_yum_repos

#- debug: msg={{ add_yum_repos  }}

#- name: Install apt-transport-https
#  when: ansible_os_family == "Debian"
#  apt:
#    name: "apt-transport-https"
#    state: present

#- name: Add Docker APT GPG key
#  when: ansible_os_family == "Debian"
#  apt_key:
#    url: https://download.docker.com/linux/ubuntu/gpg

#- name: Add Docker APT repository
#  when: ansible_os_family == "Debian"
#  apt_repository:
#    repo: deb https://download.docker.com/linux/ubuntu xenial stable
#    state: present
#    filename: 'docker'

- name: Init | Backup old /etc/yum.repos.d
  when: inventory_hostname in groups['node'] and ansible_distribution == "CentOS"
  shell: |
    (ls -dt /etc/yum.repos.d*|head -n 5; ls -d /etc/yum.repos.d*) | sort | uniq -u | xargs /bin/rm -rf;
    mv /etc/yum.repos.d{,.`date +"%Y-%m-%d-%H-%M-%S"`.bak} ;
    mkdir -p /etc/yum.repos.d

- name: Add Caicloud yum repository
  when: inventory_hostname in groups['node'] and ansible_distribution == "CentOS"
  yum_repository:
    name: Caicloud
    file: caicloud
    description: Caicloud
    baseurl: http://{{ groups['master'][0] }}/repos/
    enabled: yes
    gpgcheck: no
  with_items: "{{ groups['master'] }}"
  register: add_yum_repos

- debug: msg={{ add_yum_repos  }}

- name: Install docker engine
  when:  ansible_distribution == "CentOS"
  yum:
    disable_gpg_check: yes
    name: docker-engine
    state: present
  register: install_docker_output

- debug: msg={{ install_docker_output }}


#- set_fact:
#    docker_debs:
#      - containerd_0.2.5-0kord1_amd64.deb
#      - runc_1.0.0~rc2-0kord2_amd64.deb
#      - docker.io_1.12.6-0kord1k2_amd64.deb

#- name: Copy deb packages
#  when: ansible_distribution == "kylin"
#  copy: src={{ item }} dest={{ deb_package_dir }}
# with_items: {{ docker_debs }}

#- name: Install docker
#  when: ansible_distribution == "kylin"
#  shell: dpkg -i {{ deb_package_dir }}/{{ item }}
#  with_items: {{ docker_debs }}

#- name: Install docker engine (Debian/Ubuntu)
#  when: ansible_os_family == "Debian"
#  apt:
#    update_cache: yes
#    name: "docker-ce={{ docker_version }}*"
#    state: present

#- name: Hold docker version
#  when: ansible_os_family == "Debian"
#  dpkg_selections:
#    name: docker-ce
#    selection: hold

